QubesOS+btrfs in ashos?

tmp <-> deploy but I didn't change {tmp} variable

Allow user to specify custom subvolumes.

https://teejeetech.medium.com/linux-multiboot-with-btrfs-luks-and-efi-part-1-9b2325494e0f
https://teejeetech.medium.com/linux-multiboot-with-btrfs-luks-and-efi-part-2-7b0896c03cce

In older version of astos public, wasn't /home different on each  snapshot (for privacy etc.)?

make it so only two args are needed. /dev/sda1 /dev/sda2 ---> args[2] can be deduced from them. duh? or maybe it's a good idea to leave as is, install on
multi disks in mind?

WHile making grub2-mkconfig in fedora, it saw debian kernel butnot arch?!!!

Can I put space after comma here: os.system(f"mount {args[1]} -o subvol={btrdirs[mntdirs.index(mntdir)]},compress=zstd,noatime /mnt/{mntdir}")

Todo: *Make sure to sync the tree after* in readme file --> auto-sync after ubranch

#   test if making a node mutable, maintains inheritance to its children too

Make astpk modular: 1. a core/common denom between all distros and 2. an extension for each distro.
|- ashcore.py
|-- arch\ashpk.py
|-- fedora\ashpk.py
|-- debian\ashpk.py
And copy a merge of ashcore.py and |-- when installing a distro.
IDEA: put a ### PLACEHOLDER FOR DISTRO SPECIFIC EXTENSION ### in ashcore.py and copy |-- there to retain order of commands etc.
A similar idea might be good for installer.py?

move /etc/mnt/boot under /.snapshots/.....

/etc/mnt/bootMake T2SDE immutable

In Arch:
enable GRUB_ENABLE_BLSCFG so entries go in /boot/loader/entries

In Fedora:
https://utcc.utoronto.ca/~cks/space/blog/linux/Fedora30GrubBLSGotcha

------------
change
if os.path.exists(f"/.snapshots/rootfs/snapshot-{snapshot}/usr/share/ast/mutable"):
to
try(touch or mkdir f"/.snapshots/rootfs/snapshot-{snapshot}/usr/share/ast/mutable ) catch logic instead!
------------

souldn;t /.snashotr/rootfs/snapshot-tmp/ be read-only?!!!

even after implementing immutability toggle, when I reboot I can't write straight on /usr/XYZ, but I can write on /.snapshots/rootfs/snapshot-{booted-snapshot}/usr/XYZ

how does ubranch work with immutabity toggle? mixing a parent mutable with immutable child of another branch?!!!!

Incorporate https://github.com/Antynea/grub-btrfs

REPLACE excode != 0 with try except else

#################### IMPORTANT: For Fedora, installed binaries continue to go into /usr/sbin which is not in PATH and binaries are not found automatically. I should find a way to add /usr/sbin to PATH
################### cp /usr/sbin/btrfs* /usr/bin/
################### cp /usr/sbin/blkid /usr/bin/

---------------- bug ----------------
ran dnf remove tmux from outside chroot and it deleted 'tmux' from database but because of immutability didn't actually uninstall it (I could still run tmux). trying to uninstall for second time, results in package not found!
:beetle: I think I found a bug that we need to think about. :lady_beetle: 
```- base 0
- node 1 clone of base 0```
You install a package, say tmux in node 1 either by chrooting in and installing or live-installing. The way we have ast allows removing packages from `database` even if package is not actually uninstalled at all!
--------------------------------------

chroot as a user and run a command: https://catonmat.net/chroot-su-sh-trick
Add this functionality: sudo chroot /chroot su - {user} -c "command_that_runs_testling_tests <args>"

failed to remove /var/lib/os-prober/mount device or resource busy


For Fedora: disable rpmdb-migrate.service
https://fedoraproject.org/wiki/Changes/RelocateRPMToUsr

Change all:
cp --reflink=auto -r /mnt/boot/*
to
cp --reflink=auto -r /mnt/boot/.
# as * would not copy hidden files

fedora shows a lot of audit messages. Add audit=0 as kernel parameter

- add a function for version upgrade for fedora: dnf system-upgrade
- add a function to autoclean and autoremove in fedora

The logic for updating grub.cfg where it says:
while "BEGIN /etc/grub.d/10_linux" not in line:
should be changed. It's not comprehensive!

Remove UEFI entry B00E: sudo efibootmgr -b E -B

Fedora needs nomodeset in init parameters to boot

How to fix 'character map file `UTF-8' not found' when issuing: localedef -f UTF-8 -i en_US en_US.UTF-8
dnf -y install glibc-locale-source glibc-langpack-en

----
#!/bin/sh
exec tail -n +3 $0
# This file provides an easy way to add custom menu entries.  Simply type the
# menu entries you want to add after this comment.  Be careful not to change
# the 'exec tail' line above.

menuentry 'NixOS' --class gnu-linux --class gnu --class os $menuentry_id_option 'nixos-0aca58bc-8fdb-4a07-aa2f-56406bcf19b7' {
        set root='hd0,msdos4'
        configfile /nixos/root/boot/grub/grub.cfg
}
-----

fedora: /usr/lib/sysimage/rpm/rpmdb.sqlite
/var/lib/rpm --> /usr/lib/sysimage/rpm
https://docs.fedoraproject.org/en-US/quick-docs/bootloading-with-grub2/

btrfs property set -ts /path/to/snapshot ro false

Just after debootstrapping update: make a backup of /etc/login.defs and modify ENV_PATH and ENV_SUPATH to be universal among all ashos installation for the duration of
installation. Make sure /usr/bin and /usr/local/sbin /sbin /bin are all in PATH
cp -a /etc/login.defs /etc/login.defs.BAK
ENV_SUPATH	PATH=/usr/local/sbin:/usr/local/bin:/usr/bin
ENV_PATH	PATH=/usr/local/sbin:/usr/local/bin:/usr/bin



dnf repoquery -l crontabs

Have the installer structured as follows:
- Pre-bootstrap()
- Bootstrap()
- Post-bootstrap()

Fedora: http://blog.parahard.com/2011/06/five-steps-to-create-fedora-chroot-jail.html
https://docs.fedoraproject.org/en-US/Fedora/25/html/Installation_Guide/sect-boot-options-kickstart.html
https://pbraun.nethence.com/unix/sysutils_linux/windows_happy.html
https://pbraun.nethence.com/unix/sysutils_linux/slackware_slackinst.html

BSD:
https://docs.freebsd.org/en/books/arch-handbook/boot/


Convert installer.py to POSIX shell ideally with no bashism

this test resulted in nonbootable efi:
sudo ast clone 0
sudo ast clone 0
sudo ast branch 2
sudo chroot 4
... mkdir /etc/node4-arch
... mkdir ~/node4-arch
... exit
sudo ast deploy 4
-------------- efi non bootable!


Right now, /root among snapshots is different but #HOME is same. Should /root be same too?

$ sudo dmesg | nc termbin.com 9999 # then paste the link


Downfall of PR32 from cuberjan3: ast tree in chroot deosn't see ast excutable?!!!

IMPORTANT: In a multibooted system, what happens if btrfs-progs (btrfs driver) of another OS say arch updates and becomes incompatible with btrfs from debian?

Combine options 2 and 3 into one.

This can be set and I don't think there is any problem!
sudo chroot /mnt grub-install --bootloader-id=ashos{distro_suffix} {args[2]}
grub-install --locales=XYZ ((((--target=x86_64-efi))))))


1. tmp -> deploy     &   tmp0 > deploy-secondary
or
2. tmp0 -> deploy     &   tmp > deploy-secondary

For switching between distros, maybe it's just better to modify /etc/fstab and create grub again? try this on debian and arch.
mount /dev/sda2 /tmp/sda2
sub btrfs list /tmp/sda2
modity /tmp/sda2/etc/fstab (or /etc/fstab?!!!!) replace distro1 with distro2
sudo grub-install /dev/sda
sudo grub-mkconfig

Including --no-nvram makes install non-bootable in virtualbox, would it work on bare-metal? If so, maybe include it when production-ready?

For debian even as back as this commit, ddint' work:
1479dd1

setfont Lat38-Terminux32x16.psf.gz

https://gist.github.com/superboum/1c7adcd967d3e15dfbd30d04b9ae6144

https://www.reddit.com/r/btrfs/comments/ivruap/the_adventure_of_installing_multiple_oses_on_one/

FIGURE OUT THE STEP THAT ADDS ALL THAT LOTS OF GRUB FILES TO /DEV/SDA{1} BY DIVIFING THE SCRIPT TO SMALL BITS
For Arch, even up until creation of user accounts, there is only initramfs and vmlinuz in /dev/sda2/boot/ and nothing in neither /mnt/boot/efi nor /dev/sda1/

CHANGE all /* to /. and prefereablt use cp -a

Disadvantage of importing astpk is having to install python-anytree in live iso environment

immutable windows on winbtrfs?

might be just better to mv subvolumes as /mnt/sda2/@.snapshot_XYZ => @.snapshts_ZUK and so on!

A. FOCUS IS ON EFI right now
B. Port installer to other OSes
C: I'll fix it for Legacy BIOS soon!

TD insurance:
- Adjusted quote
- shop around

- what are the days of shut down at CKDU?

Bonavista Newfoundland

#########   In attempt to make ashos multi-distro, here are the changes I have made in astpk.py:
#########   @.snapshots/rootfs ====> @.snapshots{DISTRO}/rootfs
#########   @boot ====> @boot{DISTRO}

how to boot from netinst

The way would be:
ast deploy DISTRO node#7


-----------------
Add debian/other grub to sda1
mkdir /tmp/sda1
mount /dev/sda1 /tmp/sda1
cp -r /tmp/sda1/EFI/astOS/* /tmp/sda1/EFI/debian
------------

-Would Refind be better than GRUB?
- auto discover efi files?

For different Linuxes, use one btrfs partition:
name subvolumes as subvol_DEBIAN but when grub loading it rename them:

dual-boot might not be as difficult as thought with winbtrfs

refind + zfs ?
clover installer as bootloader for ashos?

NixOS + AshOS
--- ast base-update ----> clone the node, do the update and hash it. If it works successfuly, propose to user that previous node can be removed.
--- There should be a difference between nodes that are just updates and nodes that add new packages
--- associate a hash to nodes

curl -L -O https://bit.ly/astos042022
tar xvf astos042022

https://github.com/i2/ashos-dev/archive/refs/tags/v0.5.tar.gz

Can I combine power of ashos and bedrock linux?
I THINK IT IS A GREAT IDEA. AshOS can be a great base for bedrock linux.
Error: subvol or ZFS detected in /boot/grub/grub.cconf <- use another bootloader other than GRUB!!!

Install i3: packages needed are i3 and xorg
ast install {snapshot} i3 xorg

- have a profile.txt for each desktop-environments e.g. gnome.txt -> and then list of packages needed to 

check XDG_RUNTIME_DIR and ssl-cert in that file iinx xfce
sudo sed -i '/backuppc/d' /var/lib/dpkg/statoverride resolved the initial issue with installing gnome (kind of but it fails for aome other reasons)

set /etc/hosts:
add {username}  127.0.0.1 to /etc/hosts

my assumption is that that error is because xfce and gnome share same /usr/shaxxxxxxxxxxxxxxxx

#1   Pre-installation
#1.1	Set the console keyboard layout
#1.2	Verify the boot mode
#1.3	Connect to the internet
#1.4	Update the system clock
#1.5	Partition the disks
#1.6	Format the partitions
#1.7	Mount the file systems
#2	Installation
#2.1	Select the mirrors
#2.2	Install essential packages
#3	Configure the system
#3.1	Fstab
#3.2	Chroot
#3.3	Time zone
#3.4	Localization
#3.5	Network configuration
#3.6	Initramfs
#3.7	Root password
#3.8	Boot loader
#4	Post-installation

What does ast tree look like when installing gnome or kde?
Is it:
0 - base node
    1 - gnome
Also, what is content of /mnt/usr/share/ast/snap? Is it 1?


add /etc/hosts as without it you'll get unable to resolve host explained

install multiple packages or package groups (whatever fedora calls them?!) using ast install







###################################### DEBIAN ETC ######################################

att20-mostyolo: eror: no /usr/share/ast/snap found

These are the last bugs left:
Initial step:
    mkdir: cannot create directory '/mnt/': File exists
    mount: /mnt: /dev/sda2 already mounted on /mnt.
mid-step:
    No diversion 'diversion of /usr/share/initramfs-tools/hooks/klibc to /usr/share/initramfs-tools/hooks/klibc^i-t by klibc-utils', none removed.
    W: An error occurred dring signature verification. GPG error: ftp.debian.org/debian bullseye InRelease: couldn't create temporary file /tmp/apt.conf.aNvw3l for passing config file to apt-key
    W: GPG error deb-multimedia.orf couldn't create temporary file
    solution might be either chmod 1777 /tmp or adding key
final step:
    No DKMS packages installed: not changing secure boot validation state.

Ideal ashos installer:
- Step 1: Do the ashos prep steps, mounts, folders, etc.
- Step 2: Use best/official installer for whatever os
- Step 3: Update fstab using ashos method (even if the official installer of that os has created/modified fstab)

PROBLEM/BUG:
- ast clone 0  (create tree number X)
- ast chroot X
- touch ~/tree-X.txt (inside chroot, create a file)
- exit
- ast deploy X
- reboot
- file tree-X.txt doesn't exist in ~ but rather it exists in /.snapshots/rootfs/snapshot-1/root/ (which is defined by -{variant} right now I think!

commit# baa20d7 06/23 - 01:31:35 WAS NOT SUCCESSFUL FOR KDE <--- investigate if minimal works on it?

sudo apt-get remove -y --purge man-db

Tree Traversal in C

even minimal install should share having non-root user functionality

in installer, the parts for desktopinstall can be done using functions from astpk.py because desktopinstall=1 includes 0 as base and then branching.

In a Debian package's control file, there is a Priority field which can be set to one of: required, important, standard, optional, extra

Combine all mkdir in one bunch

https://fekir.info/post/minimize-debian/
localepurge 

Unwanted files, like most of the files from the following sections, can be removed at install time by using dpkg filters, see dpkg(1) --path-exclude and --path-include options.

set_password("root") didn't for gnome debian install?!!!!!!!!!!!!!

questions:
os.system("sudo cp --reflink=auto -r /mnt/.snapshots/boot/boot-tmp/* /mnt/boot") #why umounted /mnt/boot and then do this?
os.system(f"sudo mkdir -p /mnt/.snapshots/var/var-tmp/lib/{i}")   # i didn't have sudo here before, so probbly wasn't creating these folders!

bug at unmounting at the end: /mnt/dev was mounted twice!!!!! so had to unmount it twice so I can unmount /mnt

ToDo:
make astpk.py more modular and therefore more common, so that it can be shared among different distro. The uncommon lines of code can maybe exported to another python file?
Use cdebootstrap/multistrap instead of debootstrap?
- better logging mechanism, better than appending ' | tee -a $HOME/ash.log' to all os.system commands?

https://unix.stackexchange.com/questions/219253/the-most-minimal-debian-sid-installed-with-debootstrap
$ dpkg-query -f '${binary:Package} ${Priority}\n' -W | grep -w 'required\|important' > /etc/apt/sources.list
os.system("echo 'dpkg-query -f "'"'"${binary:Package} ${Priority}\\n"'"'" -W | grep -w "'"'"required\|important"'"'"' | tee -a /home/me/cmDELs.list")

# steps to do apt-get install inside chroot

installer.py make code chunks as def/functions as much as possible

if you choose no for was passport set properly, it throws an error that username is incorrect and it is a forver loop of crap, only way out is ctrl-z

is there ast under /mnt ???????????????? why? because of mountpoints scrambled? /mnt/ast
/mnt busy: fuser -v /path


To make sure that you see a warning while using an insecure repository, better use allow-insecure=yes instead of [trusted=yes] like below
deb [ allow-insecure=yes ] ...

echo "export LC_ALL=C" | tee -a $HOME/.profile
echo "export LC_ALL=C" | sudo tee -a /mnt/root/.profile

add user to minimal-profile too

update grub.cfg for debian

https://distro.readthedocs.io/en/latest/#id4

sudo apt-get -o Dpkg::Options::="--force-overwrite" install <package-name>



grab image from apt-cache instead of fixed linux-image-5.10.0-13-amd64

ast tree of many distributions
 base 0: Arch
 -- snapshot 01: Arch - xfce
 -- snapshot 02: Arch - gnome
 base 1: Debian
 -- snapshot 11: Debian - xfce
 -- snapshot 12: Debian - gnome

put all definitions and if conditions up top in main and astpk.py so step1 to step7 are better deletable

#/proc and /sysfs must be mounted (or mountable), /dev/pts is also recommended.

https://github.com/libguestfs/supermin
febootstrap / supermin lovely

Update desktop installl 1 and 2 for debian

### <- these are REALLY NOT NEEDED. I tested in my attempt3.

###    ##Do these in the live system (not needed inside chroot)
###    #sudo systemctl start systemd-timesyncd (not presebt in my debian!!!!)
    
    # sync time in the live environment (maybe not needed after all!
    #sudo apt-get install -y ntp
    #sudo systemctl enable --now ntp && sleep 30s && ntpq -p #sometimes it's needed to restart ntp service to have time sync again!
###    #sudo hwclock --systohc (not needed most probably)
    
###    #sync time in chroot (needed to download python3-anytree) #these two lines are probably not needed (test next time)    
###    # date_host=$(date '+%Y-%m-%d-%H:%M:%S') sudo -E chroot /mnt /bin/bash -c 'date -s $date_host'
###    #sudo chroot /mnt date -s "2022-06-17 14:25:00"
    
###    #os.system("sudo wget http://bit.ly/3xV2F5o -O /mnt/tmp/anytree")
###    #os.system("sudo chroot /mnt dpkg -i /tmp/anytree")
    #os.system("echo "deb http://www.deb-multimedia.org bullseye main" | sudo tee -a /mnt/etc/apt/sources.list.d/multimedia.list > /dev/null
    #os.system("sudo chroot /mnt apt update -oAcquire::AllowInsecureRepositories=true")
    #os.system("sudo chroot /mnt apt-get install deb-multimedia-keyring") # NOT NEEDED as it says already installed (revisison: needed if not installing from bit.ly)
#NOT SURE IF NEEDED    #os.system("sudo chroot /mnt apt-get install ca-certificates") # I believe this is needed! <--- running this spits out error that log cannot be written and complains /dev/pts not mounted, so I think I should do the 4 mounts before doing this.
    #os.system("sudo chroot /mnt apt-get install python3-anytree")
    




chroot /home/mayank/chroot/codebase /bin/bash <<"EOT"
cd /tmp/so
ls -l
echo $$
EOT



--------------------------------------------------------

apt -o RootDir=/foo ...
dpkg --root=/tmp/dpkgRootDir option, and apt’s RootDir setting. Both of these 
https://searchcode.com/file/94878737/config-files/apt.conf/
https://askubuntu.com/questions/196059/how-to-modify-settings-in-apt-conf-file-that-no-longer-exists-in-12-04
https://www.linuxquestions.org/questions/debian-26/changing-apt-and-dpkg-paths-with-apt-conf-via-$apt_config-4175592224/


/et/apt/apt.comf
Dir {
    RootDir "XYZ";
};

--------------------------------------------------------


# This post helped to fix the "efi variable not available in this system" error: https://bbs.archlinux.org/viewtopic.php?id=168516


Add bedrock linux to https://distro.readthedocs.io/en/latest/
https://bedrocklinux.org/1.0beta2/strata.html
Fedora Rawhide with ash

In astpk.py, if we add sudo at the beginning of all commands, maybe it'll make it so non-root users with sudoers privelge can run ast too (which is good)
https://manpages.debian.org/bullseye/multistrap/multistrap.1.en.html

Debiash:
#https://forum.openmediavault.org/index.php?thread/12070-guide-debootstrap-installing-debian-into-a-folder-in-a-running-system/



Gentash Linux
Fedorash Linux
Slash Linux (slackware)
OpenBSDash
NetBSDash
FreeBSDash
Centash




https://github.com/saltstack/salt/blob/master/salt/grains/core.py#L1624




sudo apt-get purge <PACKAGENAME>
sudo apt-get purge $(apt-cache depends <PACKAGENAME> | awk '{ print $2 }' | tr '\n' ' ')
sudo apt-get autoremove





what is left:
do step 2 but until chmod ing /mnt/tmp

stop there and go to the example vm, and try installing something. If permission error on tmp, then that tmp chmod is needed, otherwise just remove that commented line


tautology





--------------- lines removed from source files to make it smaller --------------------------------------------------------


###    #os.system(f'sudo chroot /mnt /bin/sh -c "LC_ALL=C apt-get install -y linux-image-{ARCH}"')

### THIS LINE IS MOVED DOWN (my recent PR fix)    os.system("sudo chroot /mnt btrfs sub set-default /.snapshots/rootfs/snapshot-tmp") #This gives the error, should likely be moved to line 206

    #Note: After changing the default subvolume on a system with GRUB, you should run grub-install again to notify the bootloader of the changes.
    #Changing the default subvolume with btrfs subvolume set-default will make the top level of the filesystem inaccessible, except by use of the subvol=/ or subvolid=5 mount options [6].






#   os.system("sudo chroot /mnt modprobe efivarfs") THis may NOT be needed as when I ran without it, I got a warning: "EFI variables are not supported on this system"

    print("echo 'Installing ntp. It will pause 30s. Sometimes it's needed to restart ntp service to have time sync again'")


#   os.system("sudo chroot /mnt modprobe efivarfs") THis may NOT be needed as when I ran without it, I got a warning: "EFI variables are not supported on this system"
    os.system("sudo mount -o bind /sys/firmware/efi/efivars /mnt/sys/firmware/efi/efivars") #maybe move this up top when I am doing all the other mountings


#    os.system("umount /mnt/var")

#    os.system("cp --reflink=auto -r /mnt/.snapshots/var/var-tmp/* /mnt/var")

#    os.system("mkdir /mnt/.snapshots/etc/etc-tmp")

#    os.system("mkdir /mnt/.snapshots/var/var-tmp")
#    os.system("mkdir /mnt/.snapshots/boot/boot-tmp")
#    os.system(f"mount {args[1]} -o subvol=@var,compress=zstd,noatime /mnt/.snapshots/var/var-tmp")

#    os.system("sudo umount /mnt/dev") #not existing (maybe not needed?)
#    os.system("sudo umount /mnt/proc") #not existing (maybe not needed?)
#    os.system("sudo umount /mnt/sys") #not existing (maybe not needed?)

    os.system("sudo umount -R /mnt")   #gives error /mnt target busy --- maybe I should use: sudo umount -R /mnt/*
#    os.system(f"sudo mount {args[1]} /mnt")
#os.system(f"sudo mount {args[1]} -o subvolid=5 /mnt")
###    os.system("sudo btrfs sub del /mnt/@") # it gives an error could not statfs: No such file or directory (could not statfs, no such file or directory)
#    os.system("sudo umount -R /mnt")
#    clear()
#    print("Installation complete")
#    print("You can reboot now :)")



----------------------------------------------------------------------------------------------------------------
visceral


bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"












sudo apt-get clean
sudo apt-get autoclean




moolah = money for mollahs


zfs snapshots for bsdashos

regarding extending support to oses  that don;t support btrfs: is it possibke to have a portion of disk formtateted as btrfs for ashos and taht would act
as pointer, keeypign track of what is what and where. Something like MBR, keeping addresses on btrfs but the acual file system could be anything (xfs, ext3, dragonfly etc)




open one of the vms debiast and see if all mountponnt are combined and scrambled even ferom before instaklers?


the reason Im not deleting the temporary debian-ashos-installer vms is if I have some interesting useful commands in thier the bash history




regex for removing unnecessary f-strings when not needed: f"[^{]*"



####################################################################################




###################################### GENTOO ######################################
You may have missed some installation steps. The emerge command is not available in the LiveCD environment, it is in the stage tarball(s).

After booting the LiveCD, you need to setup your partitions / filesystems, unpack a stage tarball, and chroot into it, then you will be able to use the emerge command.

####################################################################################



green sleeves song



>>> subprocess.check_output(
...     "ifconfig en0 | awk '{ print $2}' | "
...     "grep -E -o '([0-9]{1,3}[\.]){3}[0-9]{1,3}' | "
...     "tr -d '\n'", shell=True)
'172.17.174.160'












Maybe better descriptionfor these:
print(f"Branch {i} was added to parent of {snapshot}.")
print(f"Branch {i} was added under snapshot {snapshot}.")








-------- FreeBSD ----------
https://www.youtube.com/watch?v=s1WvmIW_b8o
---------------------------





box:/# parted /dev/xvde -s mklabel gpt mkpart primary 1 50% mkpart primary 50% 100% set 1 boot on set 2 lvm on p


I'm going to retract from my proposal for incorporating @boot under @.snapshots... at least for now.


dnf --installroot=$target --releasever=rawhide group install "Fedora Workstation"
dnf -y system-upgrade download --allowerasing --releasever=rawhide





Is this going to be a multi-boot setup? y/n
y: 
Are you adding to an already ashos installation? y/n

Please choose one of the following:
1. Single OS installation
2. Initiate a multi-boot ashos setup
3. Adding to an already installed ashos

1 => is_multiboot=False, MB=""
2 => is_multiboot=True, MB=f'_{distro}'
3 => rename_subvolumes, multiboot=True, MB=f'_{distro}'







================================

In my vanilla (non-multiboot) arch astos, here is what I have in /dev/sda1 here is what I have:
/dev/sda1/EFI/astos/grubx64.efi (so no .../efi/EFI/... business)

Here is what I have in /boot (without mounting /dev/sda1 to /boot/efi):
efi
grub
initram falback
initram
vmlinuz
in efi:
/boot/efi/EFI/astos/grubx64.efi
grub.cfg is a full-fledged grub

the two grubx64.efi are same

================================
XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
================================

In my multiboot (arch installed first and then debian), here is what I have in /boot (without mounting /dev/sda1 to /boot/efi):

================================





















ramin:
شیره افرا
taffee


https://www.tonymacx86.com/threads/guide-how-to-keep-clover-working-when-installing-windows-and-linux.272807/


https://semjonov.de/posts/2021-09/minimal-ubuntu-installation-with-debootstrap/

---------------------------------- gentoo ----------------------------
https://www.reddit.com/r/Gentoo/comments/npsax4/i_wrote_a_gentoo_installer_with_a/
https://gist.github.com/MoritzMaxeiner/6f3b3b22ced5c93d9eb4
https://wiki.gentoo.org/wiki/User:Sakaki/Sakaki's_EFI_Install_Guide/Installing_the_Gentoo_Stage_3_Files
https://wiki.gentoo.org/wiki/Handbook:AMD64/Installation/Base#systemd
https://forums.gentoo.org/viewtopic-t-918118-start-0.html
https://wiki.gentoo.org/wiki/Handbook:AMD64/Installation/Bootloader#Default:_GRUB2
-----------------------------------------------------------------------


---------------------------------- fedora ----------------------------
https://glacion.com/2019/06/16/Fedora.html
----------------------------------------------------------------------



---------------------------------- LUKS ----------------------------
* https://www.reddit.com/r/archlinux/comments/o1opyj/comment/h26w9so/?utm_source=reddit&utm_medium=web2x&context=3
* https://aur.archlinux.org/packages/grub-git?O=10&PP=10#comment-769218
* https://unix.stackexchange.com/questions/508253/can-i-restore-a-grub-installation-using-dd
* https://unix.stackexchange.com/questions/81556/area-on-disk-after-the-mbr-and-before-the-partition-start-point
* https://stackoverflow.com/questions/15238100/use-dd-to-write-data-starting-from-a-specific-location
https://wiki.archlinux.org/title/dm-crypt/Encrypting_an_entire_system#Avoiding_having_to_enter_the_passphrase_twice
https://www.pavelkogan.com/2014/05/23/luks-full-disk-encryption/#bonus-login-once
https://unix.stackexchange.com/questions/502287/what-are-the-differences-between-the-purposes-of-core-img-and-files-in-boot
https://blog.heckel.io/2017/05/28/creating-a-bios-gpt-and-uefi-gpt-grub-bootable-linux-system/#Creating-a-GPT-with-a-BIOS-boot-partition-and-an-EFI-System-Partition
https://unix.stackexchange.com/questions/332880/how-does-grub-find-boot-partition-on-an-mbr-disk
https://gist.github.com/MaxXor/ba1665f47d56c24018a943bb114640d7
https://gist.github.com/mruiz42/83d9a232e7592d65d953671409a2aab9
https://wiki.archlinux.org/title/User:M0p/LUKS_Root_on_Btrfs
https://www.gnu.org/software/grub/manual/grub/grub.html#BIOS-installation
https://wiki.archlinux.org/title/dm-crypt/Encrypting_an_entire_system#LUKS_on_a_partition

###TODO: cryptsetup close device-mapper "remove ioctl" busy

----------------------------------------------------------------------

https://pubs.opengroup.org/onlinepubs/009604599/utilities/sed.html




---------------------------------- Debian ----------------------------
https://gist.github.com/Tookmund/abfc4cbd803915264e0c
----------------------------------------------------------------------


---------------------------------- LVM ----------------------------
https://gist.github.com/OdinsPlasmaRifle/e16700b83624ff44316f87d9cdbb5c94
https://gist.github.com/lambroisie/93ff32ccf59f4b322148cc436bdee434
https://gist.github.com/thecatwasnot/ad9fc24ce1e5e44018ed8389b1f29016
https://gist.github.com/hightemp/22d5da40ee2e4467403db5f2ff889216
https://gist.github.com/ahoneybun/e96db89fbe5f5b4e269ca935aba54420
https://gist.github.com/nhumrich/67f6f13ae88eaabaa219953d41c5bf9d
----------------------------------------------------------------------


---------------------------------- Veracrypt ----------------------------
https://forums.linuxmint.com/viewtopic.php?t=273185
----------------------------------------------------------------------











----------- LINUX MINT --------------------------------------------------
https://www.pavelkogan.com/2015/01/25/linux-mint-encryption/
----------------------------------------------------------------------
